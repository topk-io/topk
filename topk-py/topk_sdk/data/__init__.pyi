import builtins
import typing

class Value: ...
class List: ...

def f32_vector(data: builtins.list[float]) -> List: ...
def u8_vector(data: builtins.list[int]) -> List: ...
def binary_vector(data: builtins.list[int]) -> List: ...
def f32_sparse_vector(data: builtins.dict[int, float]) -> Value: ...
def u8_sparse_vector(data: builtins.dict[int, int]) -> Value: ...
def bytes(data: typing.Union[builtins.list[int], builtins.bytes]) -> Value: ...
def u32_list(data: builtins.list[int]) -> List: ...
def i32_list(data: builtins.list[int]) -> List: ...
def i64_list(data: builtins.list[int]) -> List: ...
def f32_list(data: builtins.list[float]) -> List: ...
def f64_list(data: builtins.list[float]) -> List: ...
def string_list(data: builtins.list[str]) -> List: ...
