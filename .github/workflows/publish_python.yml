# This file is autogenerated by maturin v1.8.1
# To update, run
#
#    maturin generate-ci github
#
name: Build & publish Python SDK

on:
  workflow_dispatch:
    inputs:
      publish:
        type: boolean
        description: "Whether to publish the release to PyPI"
        default: false
  workflow_call:
    inputs:
      publish:
        type: boolean
        description: "Whether to publish the release to PyPI"
        default: false

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04-arm
            target: aarch64
          - runner: ubuntu-22.04-arm
            target: armv7
          - runner: ubuntu-22.04
            target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.9 -i python3.10 -i python3.11 -i python3.12 -i python3.13
          sccache: "true"
          manylinux: auto
          working-directory: topk-py
          before-script-linux: ${{ (contains(matrix.platform.target, 'x86') || contains(matrix.platform.target, 'aarch64')) && 'yum' || 'apt-get' }} install -y unzip && curl -L -o protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v29.3/protoc-29.3-linux-${{ matrix.platform.runner == 'ubuntu-22.04' && 'x86_64' || 'aarch_64' }}.zip && unzip protoc.zip && mv bin/protoc /usr/local/bin/protoc && protoc --version
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: topk-py/dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.9 -i python3.10 -i python3.11 -i python3.12 -i python3.13
          sccache: "true"
          manylinux: musllinux_1_2
          working-directory: topk-py
          before-script-linux: apt-get install -y unzip && curl -L -o protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v29.3/protoc-29.3-linux-x86_64.zip && unzip protoc.zip && mv bin/protoc /usr/local/bin/protoc && protoc --version
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: topk-py/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: windows-latest
            target: x64
            protoc_arch: win64
          - runner: windows-latest
            target: x86
            protoc_arch: win32
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Install protoc
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v29.3/protoc-29.3-${{ matrix.platform.protoc_arch }}.zip
          mkdir protoc
          unzip protoc-29.3-${{ matrix.platform.protoc_arch }}.zip -d protoc
          echo "Adding protoc to PATH"
          echo "${{ github.workspace }}\protoc\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
      - name: Check protoc
        run: protoc.exe --version
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.9 -i python3.10 -i python3.11 -i python3.12 -i python3.13
          sccache: "true"
          working-directory: topk-py
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: topk-py/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
            protoc_arch: osx-x86_64
          - runner: macos-14
            target: aarch64
            protoc_arch: osx-aarch_64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install protoc
        run: brew install protobuf
      - name: Check protoc
        run: protoc --version
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.9 -i python3.10 -i python3.11 -i python3.12 -i python3.13
          sccache: "true"
          working-directory: topk-py
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: topk-py/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: -m topk-py/Cargo.toml --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ inputs.publish }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
