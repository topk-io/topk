name: Pull Request

on:
  pull_request:
    types: [synchronize, opened, reopened, labeled, unlabeled]

jobs:
  rust:
    name: Test Rust
    runs-on: public-amd64
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready') }}
    env:
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v4

      - name: Install earthly
        run: sudo bash -c "curl -L https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -o /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly"

      - name: Rust tests
        run: earthly --secret TOPK_API_KEY +test-rs --region elastica
        env:
          TOPK_API_KEY: ${{ secrets.TOPK_API_KEY }}

  python:
    name: Test Python
    runs-on: public-amd64
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready') }}
    env:
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v4

      - name: Install earthly
        run: sudo bash -c "curl -L https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -o /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly"

      - name: Python tests
        run: earthly --secret TOPK_API_KEY +test-py --region elastica
        env:
          TOPK_API_KEY: ${{ secrets.TOPK_API_KEY }}

  javascript:
    name: Test JavaScript
    runs-on: public-amd64
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready') }}
    env:
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v4

      - name: Install earthly
        run: sudo bash -c "curl -L https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -o /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly"

      - name: JavaScript tests
        run: earthly --secret TOPK_API_KEY +test-js --region elastica
        env:
          TOPK_API_KEY: ${{ secrets.TOPK_API_KEY }}

  all_sdks_same_version:
    name: Verify all SDKs on the same version
    runs-on: public-amd64
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: Install bun dependencies
        run: bun add commander

      - name: Check all SDKs versions
        run: |
          bun run utils/bump-release-version.ts check

  all_sdks_sdk_reference_docs_sync:
    name: Verify SDKs reference docs are in sync
    runs-on: public-amd64
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v6

      - uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          cache-dependency-path: |
            **/yarn.lock

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: yarn install

      - name: Install bun dependencies
        run: bun add commander

      - name: Check all SDKs reference docs are in sync
        run: |
          bun run utils/verify-sdk-docs-sync.ts check

  pre_commit:
    name: Verify pre-commit hooks pass
    runs-on: public-amd64
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready') }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v6

      - name: Run pre-commit
        run: uvx pre-commit run --all-files --show-diff-on-failure --color always

  ready:
    name: Ready
    needs: [rust, python, javascript, all_sdks_same_version, pre_commit]
    runs-on: public-amd64
    steps:
      - name: Ready
        run: echo "Ready"
